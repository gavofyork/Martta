			Typed IP				Declaration IP				Type IP
A-Z													create/edit explicit type
a-z			local variable, in-scope function						create/edit simple type
0			numeric literal				pure virtual method
1			numeric literal
2			numeric literal
3			numeric literal
4			numeric literal
5			numeric literal
6			numeric literal
7			numeric literal
8			numeric literal				
9			numeric literal
Escape		stop editing
Tab		start editing
Space		symbol break, next entity
Return		append [shift: insert] entity, next line
Backspace	undo
Delete		delete entity, first child usurps if possible [shift: delete entirely]
Insert		insert mode for next key press
Home		left-most, biggest entity on line 
End
PageUp		move to parent entity
PageDown	move to child entity (order taken from previous PageUp)
F1
F2
F3
F4
F5			
F6
F7
F8
F9			run
F10			step over
F11			step in (shift: step out)
F12
`
Â		
!			(simple operator), strobe?							insert const
"			string literal
£
$
%			(simple operation), strobe?
^			(simple operation), strobe?
&			(simple operation), strobe?							insert reference
*			(simple operation), strobe?							insert pointer
(			move to entity after next '(', insert if allowable
)			move to entity encompassing next ')'
-			(simple operation), strobe?
=			assignment, strobe into simple operation
_			
+			(simple operation), strobe?
{		open next body, focus on first statement, insert placeholder if none
}		close current body
[													insert array 
]													focus current array
;
:			global symbol
'			character literal
@			
#
~
,			move to next in argument/param list, comma operation
.			member operation, strobe into long member operation ("->")
/			(simple operation), strobe?
\
|			(simple operation), strobe?
<			(simple operation), strobe?
>			(simple operation), strobe?
?			ternary operation, if.
A			forall					variable
B			break					base class
C			construct				constructor
D			declare variable
E			else
F			for					friend
G			goto
H			focus class				
I			true					private
J								
K			continue
L			local referenced			virtual overload
M			member variable referenced		method
N			new
O			false					protected
P								
Q			case
R								
S			switch
T			this					template
U			do..until				public
V								virtual method
X			cast					cast operator
Y								
Z			delete
